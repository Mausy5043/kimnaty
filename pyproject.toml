# Project: kimnaty

# when changing dependencies also consider `requirements.txt` and `environment.yml`

[project]
name = "kimnaty"
version = "0.0.0"   # rolling release has no version
description = "monitoring room temperature/humidity"
dependencies = [
    "gracefulkiller~=0.4",
    "matplotlib~=3.10",
    "mausy5043-common==2.4.6",
    # already delivered by mausy5043-common, so no version here:
    "numpy",
    "pandas",
    "pylywsdxx~=2.8",
    "python-dateutil~=2.9",
    "pytz==2025.2",
    "requests~=2.32",
    "sh~=2.2",
    ]
license = {file = "LICENSE"}
authors = [
  { name="Mausy5043" },
  ]
readme = "README.md"
requires-python = ">=3.12"

[tool.autopep8]
max_line_length = 98
in-place = true
recursive = true
aggressive = 2
ignore = [
    # whitespace before ':': is enforced by black
    "E203",
    # line too long; is handled by `pylint`
    # "E501",
    ]

[tool.bandit]
skips = []

[tool.black]
line-length = 98
target-version = ["py39", "py310", "py311", "py312", "py313"]

[tool.isort]
profile = "black"
py_version="auto"

[tool.flake8]
max_line_length = 98
ignore = [
    # function too complex: is what we do ;-)
    "C901",
    # whitespace before ':': is enforced by black
    "E203",
    # module level import not at top of file; handled by `pylint`
    "E402",
    # line too long: is checked by pylint
    "E501",
    # line break before binary: is against policy.
    "W503",
    ]

[tool.mypy]
# ignore_errors = true
strict = false
warn_return_any = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
strict_equality = true
check_untyped_defs = true
disallow_subclassing_any = true
disallow_untyped_decorators = true
disallow_untyped_calls = true
no_implicit_reexport = true
extra_checks = true

[tool.pydocstyle]
inherit = false
convention = "google"
match = ".*\\.py"
add-ignore = "D"

[tool.ruff]
fix = true
indent-width = 4
line-length = 98
output-format = "concise"
include = ["pyproject.toml", "bin/**/*.py"]

[tool.ruff.format]
indent-style = "space"
line-ending = "auto"
quote-style = "preserve"

[tool.ruff.lint]
select = ["B", "E", "F", "I", "SIM", "UP", "W"]
ignore = [
    # line too long: formatter is leading
    "E501"
    ]
# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# pylint is controlled by .pylintrc

[tool.pyright]
reportAttributeAccessIssue="none"
